/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
class Solution {
    public List<Interval> insert(List<Interval> intervals, Interval newInterval) {
        intervals.add(newInterval);
        Collections.sort(intervals,new Comparator<Interval>(){
            public int compare(Interval o1, Interval o2){
                return o1.start-o2.start;
            }
        });
        System.out.println(intervals.size());
        for(int i=0;i<intervals.size()-1;){
            Interval a = intervals.get(i);
            Interval b = intervals.get(i+1);
            if(a.end >=b.end){
                intervals.remove(i+1);
            }else if(a.end >=b.start && a.end < b.end){
                intervals.get(i+1).start = intervals.get(i).start;
                intervals.remove(i);
            }else{
                i++;
            }
        }
        return intervals;
    }
}
